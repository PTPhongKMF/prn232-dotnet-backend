// <auto-generated />
using System;
using MathslideLearning.Data.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MathslideLearning.Data.Migrations
{
    [DbContext(typeof(MathslideLearningDbContext))]
    partial class MathslideLearningDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MathslideLearning.Data.Entities.PurchasedSlide", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("SlideId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchasedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "SlideId");

                    b.HasIndex("SlideId");

                    b.ToTable("PurchasedSlides");
                });

            modelBuilder.Entity("MathslideLearning.Data.Entities.Slide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("MathslideLearning.Data.Entities.SlidePage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int>("SlideId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SlideId");

                    b.ToTable("SlidePages");
                });

            modelBuilder.Entity("MathslideLearning.Data.Entities.SlideTag", b =>
                {
                    b.Property<int>("SlideId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("SlideId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("SlideTags");
                });

            modelBuilder.Entity("MathslideLearning.Data.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("MathslideLearning.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MathslideLearning.Data.Entities.PurchasedSlide", b =>
                {
                    b.HasOne("MathslideLearning.Data.Entities.Slide", "Slide")
                        .WithMany("PurchasedByUsers")
                        .HasForeignKey("SlideId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MathslideLearning.Data.Entities.User", "User")
                        .WithMany("PurchasedSlides")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Slide");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MathslideLearning.Data.Entities.Slide", b =>
                {
                    b.HasOne("MathslideLearning.Data.Entities.User", "Teacher")
                        .WithMany("CreatedSlides")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("MathslideLearning.Data.Entities.SlidePage", b =>
                {
                    b.HasOne("MathslideLearning.Data.Entities.Slide", "Slide")
                        .WithMany("SlidePages")
                        .HasForeignKey("SlideId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Slide");
                });

            modelBuilder.Entity("MathslideLearning.Data.Entities.SlideTag", b =>
                {
                    b.HasOne("MathslideLearning.Data.Entities.Slide", "Slide")
                        .WithMany("SlideTags")
                        .HasForeignKey("SlideId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MathslideLearning.Data.Entities.Tag", "Tag")
                        .WithMany("SlideTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Slide");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("MathslideLearning.Data.Entities.Slide", b =>
                {
                    b.Navigation("PurchasedByUsers");

                    b.Navigation("SlidePages");

                    b.Navigation("SlideTags");
                });

            modelBuilder.Entity("MathslideLearning.Data.Entities.Tag", b =>
                {
                    b.Navigation("SlideTags");
                });

            modelBuilder.Entity("MathslideLearning.Data.Entities.User", b =>
                {
                    b.Navigation("CreatedSlides");

                    b.Navigation("PurchasedSlides");
                });
#pragma warning restore 612, 618
        }
    }
}
